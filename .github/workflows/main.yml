
name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  workflow_dispatch:

env:
  MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
  MYSQL_USER_PASSWORD: ${{ secrets.MYSQL_USER_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Java JDK
        uses: actions/setup-java@v3.4.0
        with:
          distribution: 'adopt-hotspot'
          java-version: '11'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: actions
          mysql user: root
          mysql root password: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          
      - name: Set application.yml for deploy
        working-directory: ./src/main/resources
        run: |
          cat /dev/null/ > application-prod.yml
          echo "${{ secrets.APPLICATION }}" >> ./application-prod.yml  

      - name: Build with Gradle
        run: ./gradlew bootJar  
      
      - name: Docker Login
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_SECRET }}
          
      - name: Docker build
        run: |
          docker build -t spring-cicd .
          docker tag spring-cicd ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd:${GITHUB_SHA::7}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd:${GITHUB_SHA::7}
      
#       - name: Deploy
#         run: |
#           ssh -o StrictHostKeyChecking=no -i ${{ secrets.PRIVATE_KEY }} ubuntu@${{ secrets.SSH_HOST }}
#           ls -al
          
#       - name: Adding Known Hosts
#         run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          
      - name: deploy!
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            sudo docker ps -a -q -f "name=server" | grep -q . && docker stop server && docker rm server | true
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd:${GITHUB_SHA::7}
            sudo docker tag ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd:${GITHUB_SHA::7} spring-cicd
            sudo docker run -d -e MYSQL_DATABASE=$MYSQL_DATABASE -e MYSQL_USER_PASSWORD=$MYSQL_USER_PASSWORD --name server -p 80:8080 spring-cicd
          
